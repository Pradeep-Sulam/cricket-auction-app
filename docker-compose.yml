version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: cricket-auction-db
    environment:
      POSTGRES_USER: auction_user
      POSTGRES_PASSWORD: auction_pass
      POSTGRES_DB: auction_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - cricket-auction-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U auction_user -d auction_db"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cricket-auction-backend
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgresql://auction_user:auction_pass@postgres:5432/auction_db
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    command: >
      sh -c "
      echo '‚è≥ Waiting for database to be ready...' &&
      for i in {1..10}; do
          pg_isready -h postgres -p 5432 -U auction_user && break;
          echo 'Database not ready, waiting...';
          sleep 2;
      done &&
      echo 'üöÄ Starting backend server...' &&
      uvicorn app.main:app --host 0.0.0.0 --port 8000
      "
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8000/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - cricket-auction-network


  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: cricket-auction-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - cricket-auction-network

networks:
  cricket-auction-network:
    driver: bridge

volumes:
  pgdata:
